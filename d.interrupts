#include <PinChangeInterrupt.h> // include PinChangeInterrupt library

const int motionPin1 = 8; // Motion sensor 1 connected to digital pin 2
const int motionPin2 = 7; // Motion sensor 2 connected to digital pin 3
const int motionPin3 = 2; // Motion sensor 3 connected to digital pin 4
const int ledPin = 12;    // LED connected to digital pin 13
volatile bool motionDetected1 = false;
volatile bool motionDetected2 = false;
volatile bool motionDetected3 = false;

void setup() {
  pinMode(ledPin, OUTPUT);
  
  PCintPort::attachInterrupt(motionPin1, handleInterrupt1, CHANGE); // Attach interrupt to motion sensor 1 pin
  PCintPort::attachInterrupt(motionPin2, handleInterrupt2, CHANGE); // Attach interrupt to motion sensor 2 pin
  PCintPort::attachInterrupt(motionPin3, handleInterrupt3, CHANGE); // Attach interrupt to motion sensor 3 pin

  // Set up timer1 to interrupt every 5 seconds
  noInterrupts(); // Disable interrupts while we set up the timer
  TCCR1A = 0; // Set timer1 registers to 0
  TCCR1B = 0;
  OCR1A = 31249; // Set timer1 compare value for 5 second interrupt
  TCCR1B |= (1 << WGM12); // Configure timer1 for CTC mode
  TCCR1B |= (1 << CS12) | (1 << CS10); // Set prescaler to 1024
  TIMSK1 |= (1 << OCIE1A); // Enable timer1 compare interrupt
  interrupts(); // Enable interrupts
}

void loop() {
  // Do whatever you want in the loop function
}

void handleInterrupt1() {
  motionDetected1 = digitalRead(motionPin1) == HIGH;
}

void handleInterrupt2() {
  motionDetected2 = digitalRead(motionPin2) == HIGH;
}

void handleInterrupt3() {
  motionDetected3 = digitalRead(motionPin3) == HIGH;
}

ISR(TIMER1_COMPA_vect) {
  // This interrupt service routine runs every 5 seconds
  digitalWrite(ledPin, HIGH);
  delay(500); // Turn the LED on for half a second
  digitalWrite(ledPin, LOW);
}
